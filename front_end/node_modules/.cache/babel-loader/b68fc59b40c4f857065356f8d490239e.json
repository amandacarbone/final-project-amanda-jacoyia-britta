{"ast":null,"code":"import axios from \"axios\"; // gets meals based on ingredient\n\nexport function getMealByIngrediant(ingrediant) {\n  return axios.get(\"https://www.themealdb.com/api/json/v1/1/filter.php\", {\n    params: {\n      i: ingrediant\n    }\n  }).then(response => {\n    return response.data;\n  });\n}\n; // gets meals based on category\n\nexport function getMealByCategory(category) {\n  return axios.get(\"https://www.themealdb.com/api/json/v1/1/filter.php\", {\n    params: {\n      c: category\n    }\n  }).then(response => {\n    return response.data;\n  });\n}\n; // gets meals based on cruisine\n\nexport function getMealByArea(area) {\n  return axios.get(\"https://www.themealdb.com/api/json/v1/1/filter.php\", {\n    params: {\n      a: area\n    }\n  }).then(response => {\n    return response.data;\n  });\n}\n; //displays all categories \n\nexport function getCategories() {\n  return axios.get(\"https://www.themealdb.com/api/json/v1/1/categories.php\").then(reponse => reponse.data);\n}","map":{"version":3,"sources":["/Users/brita/Desktop/gcoct/final-project-amanda-jacoyia-britta/front_end/src/services/api.ts"],"names":["axios","getMealByIngrediant","ingrediant","get","params","i","then","response","data","getMealByCategory","category","c","getMealByArea","area","a","getCategories","reponse"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,SAASC,mBAAT,CACLC,UADK,EAGkB;AACvB,SAAOF,KAAK,CACTG,GADI,CAEH,oDAFG,EAGH;AACEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,CAAC,EAAEH;AADG;AADV,GAHG,EASJI,IATI,CASCC,QAAQ,IAAI;AAEhB,WAAOA,QAAQ,CAACC,IAAhB;AACD,GAZI,CAAP;AAaD;AAAA,C,CAED;;AACA,OAAO,SAASC,iBAAT,CACLC,QADK,EAGkB;AACvB,SAAOV,KAAK,CACTG,GADI,CAEH,oDAFG,EAGH;AACEC,IAAAA,MAAM,EAAE;AACNO,MAAAA,CAAC,EAAED;AADG;AADV,GAHG,EASJJ,IATI,CASCC,QAAQ,IAAI;AAEhB,WAAOA,QAAQ,CAACC,IAAhB;AACD,GAZI,CAAP;AAaD;AAAA,C,CAED;;AACA,OAAO,SAASI,aAAT,CACLC,IADK,EAGkB;AACvB,SAAOb,KAAK,CACTG,GADI,CAEH,oDAFG,EAGH;AACEC,IAAAA,MAAM,EAAE;AACNU,MAAAA,CAAC,EAAED;AADG;AADV,GAHG,EASJP,IATI,CASCC,QAAQ,IAAI;AAEhB,WAAOA,QAAQ,CAACC,IAAhB;AACD,GAZI,CAAP;AAaD;AAAA,C,CAED;;AACA,OAAO,SAASO,aAAT,GAAgD;AACrD,SAAOf,KAAK,CACTG,GADI,CAEH,wDAFG,EAIJG,IAJI,CAIEU,OAAD,IAAaA,OAAO,CAACR,IAJtB,CAAP;AAKD","sourcesContent":["import { MealResponse } from \"../models/mealResponse\"\nimport axios from \"axios\"\n\n// gets meals based on ingredient\nexport function getMealByIngrediant(\n  ingrediant: string,\n\n): Promise<MealResponse> {\n  return axios\n    .get<any>(\n      \"https://www.themealdb.com/api/json/v1/1/filter.php\",\n      {\n        params: {\n          i: ingrediant\n        }\n      }\n    )\n    .then(response => {\n\n      return response.data\n    })\n};\n\n// gets meals based on category\nexport function getMealByCategory(\n  category: string,\n\n): Promise<MealResponse> {\n  return axios\n    .get<any>(\n      \"https://www.themealdb.com/api/json/v1/1/filter.php\",\n      {\n        params: {\n          c: category\n        }\n      }\n    )\n    .then(response => {\n\n      return response.data\n    })\n};\n\n// gets meals based on cruisine\nexport function getMealByArea(\n  area: string,\n\n): Promise<MealResponse> {\n  return axios\n    .get<any>(\n      \"https://www.themealdb.com/api/json/v1/1/filter.php\",\n      {\n        params: {\n          a: area\n        }\n      }\n    )\n    .then(response => {\n\n      return response.data\n    })\n};\n\n//displays all categories \nexport function getCategories(): Promise<MealResponse> {\n  return axios\n    .get<MealResponse>(\n      \"https://www.themealdb.com/api/json/v1/1/categories.php\",\n    )\n    .then((reponse) => reponse.data);\n}\n"]},"metadata":{},"sourceType":"module"}