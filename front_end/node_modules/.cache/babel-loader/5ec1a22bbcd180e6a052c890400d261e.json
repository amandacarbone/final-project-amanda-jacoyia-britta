{"ast":null,"code":"var _jsxFileName = \"/Users/brita/Desktop/gcoct/final-project-amanda-jacoyia-britta/front_end/src/components/SearchPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SearchPage() {\n  _s();\n\n  const [searchItem, setSearchItem] = useState('');\n  const [results, setResults] = useState([]); //This will use the services page to get the search results\n  // useEffect(() => {\n  //     if (searchItem === '') {\n  //     } else {\n  //         searchRecipes(searchItem).then(response => setResults(response.data))\n  //     }, ([searchItem])\n  //})\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchPage, \"5qITu4unc2cO8ER1FBvfp/xmAjY=\");\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/brita/Desktop/gcoct/final-project-amanda-jacoyia-britta/front_end/src/components/SearchPage.tsx"],"names":["useState","SearchPage","searchItem","setSearchItem","results","setResults"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAEzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAM,EAAN,CAAtC,CAHyB,CAOzB;AAGA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,sBAEI;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaH;;GAhCeC,U;;KAAAA,U","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\"\n\nexport function SearchPage() {\n\n    const [searchItem, setSearchItem] = useState('');\n    const [results, setResults] = useState <[]>([]);\n\n\n\n    //This will use the services page to get the search results\n\n\n    // useEffect(() => {\n    //     if (searchItem === '') {\n    //     } else {\n    //         searchRecipes(searchItem).then(response => setResults(response.data))\n\n    //     }, ([searchItem])\n\n    //})\n\n    return(\n\n        <div>\n\n            {/* <input className='searchTerm' placeholder= '' value={searchItem} onChange={(e) => setSearchItem (e.target.value) } type='text' name='SearchRecipe' />\n\n            {results.map((recipe, i) => <RecipeSearch key={i} recipe={recipe}></RecipeSearch>)}\n        */}\n       \n       \n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}